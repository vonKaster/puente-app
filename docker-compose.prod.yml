services:
  db:
    image: postgres:16-alpine
    container_name: puente_db_prod
    environment:
      POSTGRES_DB: ${DB_NAME:-puente}
      POSTGRES_USER: ${DB_USER:-puente}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - puente-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U puente"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: puente_app_prod
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-puente}
      DB_USER: ${DB_USER:-puente}
      DB_PASSWORD: ${DB_PASSWORD}
      ALPHAVANTAGE_API_KEY: ${ALPHAVANTAGE_API_KEY}
      JWT_SECRET: ${JWT_SECRET}
    networks:
      - puente-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nginx:
    image: nginx:alpine
    container_name: puente_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/www:/var/www/certbot:ro
      - ./certbot/conf:/etc/letsencrypt:ro
    networks:
      - puente-network
    depends_on:
      - app
    restart: always
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    container_name: puente_certbot
    volumes:
      - ./certbot/www:/var/www/certbot:rw
      - ./certbot/conf:/etc/letsencrypt:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  puente-network:
    driver: bridge

volumes:
  db_data:

